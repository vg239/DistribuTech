services:
  db:
    image: postgres:16.4-bullseye
    container_name: distributech_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 3s
      timeout: 60s
      retries: 5
    restart : always

  pgadmin:
    image: dpage/pgadmin4
    container_name: distributech_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    restart: always
    depends_on:
      - db

  frontend:
    build:
      context: ./distributech_frontend
      dockerfile: Dockerfile
    container_name: distributech_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./distributech_frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - app-network
    restart: always
    depends_on:
      - backend

  backend:
    build:
      context: ./distributech_backend
      dockerfile: Dockerfile
    container_name: distributech_backend
    ports:
      - "8000:8000"
    volumes:
      - ./distributech_backend:/app
      - /app/code/entrypoint.sh:/app/code/entrypoint.sh
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://frontend:5173
    networks:
      - app-network
    restart: always
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge